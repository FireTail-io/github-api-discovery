name: Draft Release On Push To Main And Push Prerelease Image To ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: public.ecr.aws/x7v5r9e4
  ECR_REPOSITORY: firetail-code-repository-scanner
      
jobs:
  draft-release:
    name: Draft Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9

      - name: Draft Release
        id: draft_release
        uses: release-drafter/release-drafter@569eb7ee3a85817ab916c8f8ff03a5bd96c9c83e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ACCOUNT_ROLE_ARN }}
          role-session-name: git-api-discovery-publish-action-draft

      - name: Login to ECR and build, tag & push prerelease images
        env:
          PRERELEASE_IMAGE_TAG: ${{ steps.draft_release.outputs.tag_name }}-prerelease
        run: |
          aws ecr-public get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin public.ecr.aws
          docker build --target runtime -t $ECR_REGISTRY/$ECR_REPOSITORY:$PRERELEASE_IMAGE_TAG -f build_setup/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$PRERELEASE_IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$PRERELEASE_IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest-prerelease
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest-prerelease
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$PRERELEASE_IMAGE_TAG" >> $GITHUB_OUTPUT